<?php

namespace backend\models;


use Yii;
use yii\base\Model;
use yii\data\ActiveDataProvider;
use backend\models\Aluno;
use yii\web\Session;

/**
 * AlunoSearch represents the model behind the search form about `backend\models\Aluno`.
 */
class AlunoSearch extends Aluno
{
    /**
     * @inheritdoc
     */

    public function attributes()
    {
        return array_merge(parent::attributes(),['categorias.Valor']); // TODO: Change the autogenerated stub
    }
    public function rules()
    {


        return [
            [['idAluno' , 'Idade'], 'integer'],
            [['DataNascimento','Escalao_idEscalao',
                'Contato1', 'Contato2', 'Contato3_Email', 'EncarregadoEducacao','categorias.Valor', 'Sexo', 'Nome'], 'safe'],

        ];
    }




    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $session = new Session();
        $session->open();
        $value1 = $session['Sexo'];
        $value2 = $session['Escaloes'];
        $value3 = $session['Categorias'];


        if($value1=='' && $value2=='' && $value3 == ''){
            //tudo vazio
            $query = Aluno::find()->with('categorias');

         }elseif($value1!='' && $value2=='' && $value3 == '') {
            //prime p
            $query = Aluno::find()->where(['Sexo' => $value1])->with('categorias');

        }elseif($value1 =='' && $value2 != ''&& $value3 == ''){

            //seg p
            $query=Aluno::find()->where(['Escalao_idEscalao'=>$value2])->with('categorias');


        }  elseif($value1 =='' && $value2 ==''&& $value3 != '' ){
            //ter p
            $query =Aluno::find()->where(['categorias.idCategorias'=>$value3])->with('categorias');

        } elseif($value1 =='' && $value2 != '' && $value3 != '' ){
            //seg e ter p
            $query = Aluno::find()->with('categorias');
            $query->andWhere(['Escalao_idEscalao'=>$value2])
                  ->andWhere(['categorias.idCategorias'=>$value3]);

        } elseif($value1 !='' && $value2 == '' && $value3 != '' ){
           //pri e ter p
            $query = Aluno::find()->with('categorias');
            $query->andWhere(['Sexo'=>$value1])
                ->andWhere(['categorias.idCategorias'=>$value3]);

        }elseif($value1 !='' && $value2 != '' && $value3 == '' ){
            //pri e segun pjsdbkdwjfbdefbiefhiwdfiu
            $query = Aluno::find()->with('categorias');
            $query->andWhere(['Sexo'=>$value1])
                ->andWhere(['Escalao_idEscalao'=>$value2]);

        } elseif($value1 !='' && $value2 !='' && $value3 != ''){
            //todos p
            $query= Aluno::find()->with('categorias');
              $query->andWhere(['Sexo'=>$value1])
                    ->andWhere(['Escalao_idEscalao'=>$value2])
                    ->andWhere(['categorias.idCategorias'=>$value3]);

        }else {

        }

        $dataProvider = new ActiveDataProvider([
            'query' => $query,


        ]);

        $dataProvider->pagination->pageSize = 1000;

        $query->joinWith(['escalaoIdEscalao','categorias']);


        $this->load($params);





        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }


        $query->andFilterWhere([
            'idAluno' => $this->idAluno,
            'DataNascimento' => $this->DataNascimento,
            'Idade' => $this->Idade,

        ]);

        $query->andFilterWhere(['like', 'Nome', $this->Nome])
            ->andFilterWhere(['like', 'Contato1', $this->Contato1])
            ->andFilterWhere(['like', 'Contato2', $this->Contato2])
            ->andFilterWhere(['like', 'Contato3_Email', $this->Contato3_Email])
            ->andFilterWhere(['like', 'EncarregadoEducacao', $this->EncarregadoEducacao])
            ->andFilterWhere(['like', 'Sexo', $this->Sexo])
            ->andFilterWhere(['like', 'escalao.Valor', $this-> Escalao_idEscalao])
            ->andFilterWhere(['like',  'categorias.Valor',$this->getAttribute('categorias.Valor')]);



        return $dataProvider;
    }
}
